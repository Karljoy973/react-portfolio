name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for package.json
        id: check_pkg
        run: |
          if [ ! -f "package.json" ]; then
            echo "no_package=true" >> $GITHUB_OUTPUT
          else
            echo "no_package=false" >> $GITHUB_OUTPUT
          

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: npm i -g pnpm 

      # üîπ V√©rifier que la branche suit bien le format issue-xxx
      - name: Check branch name
        run: |
          BRANCH_NAME="${GITHUB_HEAD_REF}"
          if [[ ! "$BRANCH_NAME" =~ ^issue-[0-9]+(-[a-z0-9-_]+)*$ ]]; then
            echo "‚ùå Branch name must follow format: issue-123-description"
            exit 1
          else
            echo "‚úÖ Branch name is valid: $BRANCH_NAME"
          fi

      # üîπ V√©rifier que le dernier commit suit {branch}-{YYYY-MM-DD}
      - name: Check last commit message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B | tr -d '\n')
          BRANCH_NAME="${GITHUB_HEAD_REF}"
          DATE_REGEX="[0-9]{4}-[0-9]{2}-[0-9]{2}$"
          if [[ "$COMMIT_MSG" =~ ^${BRANCH_NAME}-${DATE_REGEX}$ ]]; then
            echo "‚úÖ Commit message is valid: $COMMIT_MSG"
          else
            echo "‚ùå Last commit must match format: {branchName}-YYYY-MM-DD"
            echo "   Branch: $BRANCH_NAME"
            echo "   Commit: $COMMIT_MSG"
            exit 1
          fi

      # üîπ V√©rifier qu‚Äôil y a bien des snapshots
      - name: Check snapshots presence
        run: pnpm snapshots:check

      # üîπ Lancer ESLint et Prettier
      # - name: Run lint
      #  run: pnpm lint

      - name: Run Prettier format
        run: pnpm pretty

      # üîπ Lancer les tests (inclut snapshot check)
      - name: Run tests
        run: pnpm test