name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for package.json
        id: check_pkg
        run: |
          if [ ! -f "package.json" ]; then
            echo "no_package=true" >> $GITHUB_OUTPUT
          else
            echo "no_package=false" >> $GITHUB_OUTPUT
          fi

      # ðŸ”¹ Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: "pnpm" # active le cache natif de setup-node

      # ðŸ”¹ Installer pnpm globalement
      - name: Install pnpm globally
        run: npm i -g pnpm

      # ðŸ”¹ Cache du store pnpm pour accÃ©lÃ©rer les installs
      - name: Setup pnpm cache
        if: steps.check_pkg.outputs.no_package == 'false'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # ðŸ”¹ Installer les dÃ©pendances (si package.json existe)
      - name: Install dependencies
        if: steps.check_pkg.outputs.no_package == 'false'
        run: pnpm install --frozen-lockfile

      # ðŸ”¹ Lancer ESLint et Prettier
      - name: Run lint
        run: pnpm lint

      - name: Run Prettier format
        run: pnpm pretty
